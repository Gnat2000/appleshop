/* --------- colors --------- */
/* --------- adjustment --------- */
*
{
    -webkit-box-sizing: border-box;
       -moz-box-sizing: border-box;
            box-sizing: border-box;
}
*:focus
{
    outline: none;
}
ul
{
    margin: 0;
    padding: 0;
}
ul li
{
    left: 0;

    padding: 0;

    list-style: none;
}
p
{
    margin: 0;
    padding: 0;
}
a
{
    cursor: pointer;
    text-decoration: none;
}
html
{
    font-size: 100.01%;

    width: 100%;
    height: 100%;
}
body
{
    font: 13px/1.42 'Open Sans', sans-sherif;

    width: 100%;
    height: 100% !important;

    background: #f3f3f3;

    -webkit-font-smoothing: antialiased;
}
.wrapper
{
    position: relative;

    overflow: hidden;

    min-width: 1190px;
    min-height: 100%;
}
.wrapper:after
{
    display: block;

    content: '';
}
.container
{
    position: relative;

    zoom: 1;

    width: 1170px;
    margin: 0 auto;
}
.container:before,
.container:after
{
    display: table;

    content: '';
}
.container:after
{
    clear: both;
}
.footer,
.wrapper:after
{
    height: 350px;
}
.footer
{
    position: relative;

    min-width: 1190px;
    margin-top: -350px;
}
.slider__img
{
    min-height: 500px;
}
.bx-wrapper
{
    margin: 0 auto 50px;

    border: 0 none;
}
.bx-wrapper .bx-pager,
.bx-wrapper .bx-controls-auto
{
    bottom: -26px;
}
.bx-wrapper .bx-prev
{
    left: 0;

    background: url('../img/big_slider/controls/controls.png') no-repeat -100px -100px;
}
.bx-wrapper .bx-prev:hover,
.bx-wrapper .bx-prev:focus
{
    background-position: -100px -100px;
}
.bx-wrapper .bx-next
{
    right: 0;

    background: url('../img/big_slider/controls/controls.png') no-repeat -350px -100px;
}
.bx-wrapper .bx-next:hover,
.bx-wrapper .bx-next:focus
{
    background-position: -350px -100px;
}
.bx-wrapper .bx-controls-direction a
{
    width: 50px;
    height: 60px;
    margin-top: -30px;
}
.bx-wrapper .bx-pager.bx-default-pager a
{
    width: 60px;
    height: 5px;

    border-radius: 0;
    background-color: #b0b8b9;
}
.bx-wrapper .bx-pager.bx-default-pager a:focus,
.bx-wrapper .bx-pager.bx-default-pager a:hover,
.bx-wrapper .bx-pager.bx-default-pager a.active
{
    background: #e2534b;
}
.footer
{
    background-color: #76c7c0;
}
.footer:before
{
    display: block;

    height: 19px;
    margin-bottom: -19px;

    content: '';

    background: url('../img/Path2.png') top center repeat;
}
.footer__top,
.footer__bottom
{
    zoom: 1;
}
.footer__top:before,
.footer__bottom:before,
.footer__top:after,
.footer__bottom:after
{
    display: table;

    content: '';
}
.footer__top:after,
.footer__bottom:after
{
    clear: both;
}
.footer__top
{
    height: 300px;
}
.footer__info,
.footer__nav,
.footer__blog
{
    float: left;
}
.footer__info
{
    width: 33.7%;
    padding-right: 25px;
}
.footer__nav
{
    width: 34.2%;
}
.footer__blog
{
    width: 32.1%;
}
.footer__logo
{
    display: inline-block;

    margin: 48px 0 23px 0;
}
.footer__logo-pic
{
    display: block;

    max-width: 192px;
    max-height: 21px;
}
.footer__logo-text
{
    position: absolute;
    left: -9999px;
}
.footer__text
{
    line-height: 23px;

    margin-bottom: 20px;

    letter-spacing: .001em;

    color: #fff;
}
.footer__contacts-item
{
    font-size: 0;
}
.footer__contacts-title
{
    font-size: 13px;

    display: inline-block;

    width: 11.7%;

    vertical-align: middle;

    color: #fff;
}
.footer__contacts-link
{
    font-family: 'Open Sans', sans-serif;
    font-size: 20px;
    font-weight: 600;
    font-style: italic;
    line-height: 30px;

    display: inline-block;

    width: 88.3%;
    padding-left: 17px;

    vertical-align: middle;

    color: #fff;
}
.footer__nav
{
    margin-top: 44px;
}
.footer__nav-list
{
    font-size: 0;
}
.footer__nav-item
{
    display: inline-block;

    width: 50%;

    vertical-align: top;
}
.footer__nav-title
{
    font-family: 'Open Sans', sans-serif;
    font-size: 20px;
    font-weight: 700;

    margin-bottom: 25px;
    padding-right: 20px;

    color: rgba(0,0,0,.5);
}
.footer__nav-link
{
    font-family: 'Open Sans', sans-serif;
    font-size: 13px;
    font-weight: 400;

    display: inline-block;

    width: 175px;
    margin-bottom: 5px;
    margin-left: 25px;
    padding-right: 20px;

    color: #fff;
}
.footer__nav-link:before
{
    font-family: FontAwesome, sans-serif;

    margin-right: 8px;

    content: '\f105';
}
.footer__blog-title,
.footer__blog-title-blog
{
    font-family: 'Open Sans', sans-serif;
    font-size: 20px;
    font-weight: 400;
    font-style: italic;

    margin-top: 44px;
    margin-bottom: 22px;

    color: #fff;
}
.footer__blog-title-blog
{
    font-family: 'Open Sans', sans-serif;
    font-weight: 700;
    font-style: normal;
}
.footer__blog-item
{
    zoom: 1;

    margin-top: 20px;
}
.footer__blog-item:before,
.footer__blog-item:after
{
    display: table;

    content: '';
}
.footer__blog-item:after
{
    clear: both;
}
.footer__blog-item:first-child
{
    margin-top: 0;
}
.footer__blog-pic
{
    float: left;
    overflow: hidden;

    max-width: 70px;
    max-height: 70px;

    border: 0 none;
    border-radius: 5px;
}
.footer__blog-pic.footer__blog-img
{
    display: block;

    width: 100%;
}
.footer__blog-article
{
    font-size: 13px;
    line-height: 18px;

    float: right;

    width: 76.72%;

    color: #fff;
}
.footer__blog-datetime
{
    margin-top: 3px;

    color: rgba(0,0,0,.5);
}
.footer__bottom
{
    height: 50px;

    background-color: rgba(0,0,0,.1);
}
.footer__bottom-text
{
    font-size: 12px;

    float: left;

    padding-top: 19px;

    color: #fff;
}
.footer__bottom-socials
{
    float: right;

    margin-top: 14px;
}
.footer__bottom-socials-list
{
    min-width: 162px;
    margin: 0;
    padding: 0;
}
.footer__bottom-socials-item
{
    display: inline-block;

    width: 23px;
    height: 22px;
    margin-left: 19px;
}
.footer__bottom-socials-item:first-child
{
    margin-left: 0;
}
.footer__bottom-socials-link
{
    display: block;

    width: 100%;
    height: 100%;

    text-indent: -9999px;

    background: url('../img/spritesheet_socials.png') no-repeat;
}
.footer__bottom-socials-link.footer__bottom-socials-link_fb
{
    background-position: -52px -50px;
}
.footer__bottom-socials-link.footer__bottom-socials-link_gp
{
    background-position: -173px -50px;
}
.footer__bottom-socials-link.footer__bottom-socials-link_tw
{
    background-position: -417px -50px;
}
.footer__bottom-socials-link.footer__bottom-socials-link_rss
{
    background-position: -294px -50px;
}
.header
{
    zoom: 1;

    padding-top: 29px;
    padding-bottom: 26px;

    background: #76c7c0 url('../img/Path3.png') bottom center repeat-x;
}
.header:before,
.header:after
{
    display: table;

    content: '';
}
.header:after
{
    clear: both;
}
.header__logo
{
    float: left;

    width: 16.41%;
    margin-left: 9px;
}
.header__nav
{
    float: right;

    width: 65.8%;
}
.header__nav.active .nav__popup
{
    left: 0;

    opacity: 1;

    -ms-filter: none;
        filter: none;
}
.header__nav.active .nav__link_popup
{
    background-color: #e0524a;
    -webkit-box-shadow: 0 7px 5px -3px #d93600;
            box-shadow: 0 7px 5px -3px #d93600;
}
.logo
{
    display: block;
}
.logo__pic
{
    display: block;

    max-width: 192px;
    max-height: 21px;
}
.logo-text
{
    position: absolute;
    left: -9999px;
}
.nav__list
{
    line-height: 0;

    text-align: justify;
}
.nav__list::after
{
    display: inline-block;
    visibility: hidden;
    overflow: hidden;

    width: 100%;
    height: 0;

    content: '';
}
.nav__item
{
    font-size: 13px;
    /* Восстанавливаем обнулённые свойства */
    line-height: 1.42;

    position: relative;

    display: inline-block;

    text-align: left;
}
.nav__item.active .nav__link
{
    border-radius: 5px;
    background-color: rgba(31,75,75,.2);
    -webkit-box-shadow: 0 6px 3px -2px #1f4b4b;
            box-shadow: 0 6px 3px -2px #1f4b4b;
}
.nav__item.active .nav__link .nav__title
{
    font-size: 14px;
}
.nav__link
{
    padding: 5px 14px;

    border-radius: 5px;
}
.nav__link:hover
{
    background-color: #e0524a;
    -webkit-box-shadow: 0 7px 5px -3px #d93600;
            box-shadow: 0 7px 5px -3px #d93600;
}
.nav__link_popup .nav__title:before
{
    font-family: FontAwesome, sans-serif;
    font-size: 14px;

    margin-right: 8px;

    content: '\f107';

    color: #fff;
}
.nav__link_search .nav__title
{
    position: absolute;
    left: -9999px;
}
.nav__link_search .nav__title:before
{
    font-family: FontAwesome, sans-serif;
    font-size: 16px;

    position: absolute;
    top: -2px;
    left: 10005px;

    content: '\f002';

    color: #fff;
}
.nav__title
{
    font-family: 'Open Sans', sans-serif;
    font-size: 13px;
    font-weight: 600;

    text-transform: uppercase;

    color: #fff;
}
.nav__popup
{
    font-family: 'Open Sans', sans-serif;
    font-weight: 600;

    position: absolute;
    z-index: 2;
    top: 40px;
    left: -9999px;

    width: 200px;

    opacity: 0;
    color: #fff;
    border-radius: 5px;
    background-color: #e2534b;

    -ms-filter: 'progid:DXImageTransform.Microsoft.Alpha(Opacity=0)';
        filter: alpha(opacity=0);
}
.nav__popup:before
{
    position: absolute;
    top: -30px;
    left: 0;

    display: block;

    width: 200px;
    height: 35px;

    content: '';
}
.nav__popup:after
{
    position: absolute;
    top: -6px;
    left: 8%;

    display: block;

    width: 0;
    height: 0;

    content: '';

    border-width: 0 6px 6px 6px;
    border-style: solid;
    border-color: transparent;
    border-bottom-color: #e2534b;
}
.nav__popup-item
{
    height: 30px;
    margin: 5px;
    padding: 5px 14px;

    border-radius: 3px;
    background-color: rgba(255,255,255,.1);
}
.nav__popup-item:hover
{
    background-color: #76c7c0;
}
.nav__popup-link
{
    font-family: 'Open Sans', sans-serif;
    font-weight: 600;

    display: inline-block;
    overflow: hidden;

    max-width: 165px;

    white-space: nowrap;
       text-overflow: ellipsis;

    color: #fff;

    -o-text-overflow: ellipsis;
}
.nav__popup-link:before
{
    font-family: FontAwesome, sans-serif;

    margin-right: 7px;

    content: '\f105';
}

/*# sourceMappingURL=data:application/json;base64, */
